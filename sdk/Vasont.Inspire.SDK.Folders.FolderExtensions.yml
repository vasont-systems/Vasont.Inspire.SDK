### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions
  commentId: T:Vasont.Inspire.SDK.Folders.FolderExtensions
  id: FolderExtensions
  parent: Vasont.Inspire.SDK.Folders
  children:
  - Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64,System.Boolean)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  - Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.PermissionUpdateModel)
  langs:
  - csharp
  - vb
  name: FolderExtensions
  nameWithType: FolderExtensions
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions
  type: Class
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FolderExtensions
    path: Folders/FolderExtensions.cs
    startLine: 18
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis class extends the <xref href=\"Vasont.Inspire.SDK.InspireClient\" data-throw-if-not-resolved=\"false\"></xref> class to include methods for calling \nfolder API endpoints.\n"
  example: []
  syntax:
    content: public static class FolderExtensions
    content.vb: Public Module FolderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  id: GetFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: GetFoldersByFolderId(InspireClient, Int64, Boolean, PermissionFlags)
  nameWithType: FolderExtensions.GetFoldersByFolderId(InspireClient, Int64, Boolean, PermissionFlags)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64, System.Boolean, Vasont.Inspire.Models.Security.PermissionFlags)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetFoldersByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 29
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return a list of folders that are children of the specified parent folder. \nIf parent folder is not specified, a list of root folders will be returned.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindFoldersByFolderId() going forward. This method will be removed in a future release.")]

      public static List<FolderBrowseModel> GetFoldersByFolderId(this InspireClient client, long folderId, bool includeAllDescendantFolders, PermissionFlags permissionFlag)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity to retrieve child folders from, pass a value of zero to retrieve all folders.
    - id: includeAllDescendantFolders
      type: System.Boolean
      description: Contains a value to indicate whether or not to include all descendant folders.
    - id: permissionFlag
      type: Vasont.Inspire.Models.Security.PermissionFlags
      description: Contains an optional <xref href="Vasont.Inspire.Models.Security.PermissionFlags" data-throw-if-not-resolved="false"></xref> that will be used to filter the results of the query.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindFoldersByFolderId() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetFoldersByFolderId(client As InspireClient, folderId As Long, includeAllDescendantFolders As Boolean, permissionFlag As PermissionFlags) As List(Of FolderBrowseModel)
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindFoldersByFolderId() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  id: FindFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Boolean,Vasont.Inspire.Models.Security.PermissionFlags)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: FindFoldersByFolderId(InspireClient, Int64, Boolean, PermissionFlags)
  nameWithType: FolderExtensions.FindFoldersByFolderId(InspireClient, Int64, Boolean, PermissionFlags)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64, System.Boolean, Vasont.Inspire.Models.Security.PermissionFlags)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindFoldersByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 44
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return a list of folders that are children of the specified parent folder. \nIf parent folder is not specified, a list of root folders will be returned.\n"
  example: []
  syntax:
    content: public static List<FolderBrowseModel> FindFoldersByFolderId(this InspireClient client, long folderId, bool includeAllDescendantFolders, PermissionFlags permissionFlag)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity to retrieve child folders from, pass a value of zero to retrieve all folders.
    - id: includeAllDescendantFolders
      type: System.Boolean
      description: Contains a value to indicate whether or not to include all descendant folders.
    - id: permissionFlag
      type: Vasont.Inspire.Models.Security.PermissionFlags
      description: Contains an optional <xref href="Vasont.Inspire.Models.Security.PermissionFlags" data-throw-if-not-resolved="false"></xref> that will be used to filter the results of the query.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindFoldersByFolderId(client As InspireClient, folderId As Long, includeAllDescendantFolders As Boolean, permissionFlag As PermissionFlags) As List(Of FolderBrowseModel)
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  id: GetComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: GetComponentsByFolderId(InspireClient, Int64, FolderComponentsQueryModel)
  nameWithType: FolderExtensions.GetComponentsByFolderId(InspireClient, Int64, FolderComponentsQueryModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetComponentsByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 62
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return components that are stored within a specific folder matching a specific search criteria.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindComponentsByFolderId() going forward. This method will be removed in a future release.")]

      public static FolderComponentsResultModel GetComponentsByFolderId(this InspireClient client, long folderId, FolderComponentsQueryModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity to retrieve components from, pass a value of zero to retrieve all components.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.FolderComponentsQueryModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.FolderComponentsQueryModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.FolderComponentsResultModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.FolderComponentsResultModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindComponentsByFolderId() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetComponentsByFolderId(client As InspireClient, folderId As Long, inputModel As FolderComponentsQueryModel) As FolderComponentsResultModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindComponentsByFolderId() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  id: FindComponentsByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: FindComponentsByFolderId(InspireClient, Int64, FolderComponentsQueryModel)
  nameWithType: FolderExtensions.FindComponentsByFolderId(InspireClient, Int64, FolderComponentsQueryModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.FolderComponentsQueryModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindComponentsByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 75
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return components that are stored within a specific folder matching a specific search criteria.\n"
  example: []
  syntax:
    content: public static FolderComponentsResultModel FindComponentsByFolderId(this InspireClient client, long folderId, FolderComponentsQueryModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity to retrieve components from, pass a value of zero to retrieve all components.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.FolderComponentsQueryModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.FolderComponentsQueryModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.FolderComponentsResultModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.FolderComponentsResultModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindComponentsByFolderId(client As InspireClient, folderId As Long, inputModel As FolderComponentsQueryModel) As FolderComponentsResultModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: GetAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: GetAncestorSiblingFoldersByFolderId(InspireClient, Int64)
  nameWithType: FolderExtensions.GetAncestorSiblingFoldersByFolderId(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetAncestorSiblingFoldersByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 93
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return a list of folders including the specified folder, \nits ancestor folders, and corresponding sibling folders.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindAncestorSiblingFoldersByFolderId() going forward. This method will be removed in a future release.")]

      public static List<FolderBrowseModel> GetAncestorSiblingFoldersByFolderId(this InspireClient client, long folderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindAncestorSiblingFoldersByFolderId() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetAncestorSiblingFoldersByFolderId(client As InspireClient, folderId As Long) As List(Of FolderBrowseModel)
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindAncestorSiblingFoldersByFolderId() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: FindAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: FindAncestorSiblingFoldersByFolderId(InspireClient, Int64)
  nameWithType: FolderExtensions.FindAncestorSiblingFoldersByFolderId(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindAncestorSiblingFoldersByFolderId
    path: Folders/FolderExtensions.cs
    startLine: 106
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return a list of folders including the specified folder, \nits ancestor folders, and corresponding sibling folders.\n"
  example: []
  syntax:
    content: public static List<FolderBrowseModel> FindAncestorSiblingFoldersByFolderId(this InspireClient client, long folderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindAncestorSiblingFoldersByFolderId(client As InspireClient, folderId As Long) As List(Of FolderBrowseModel)
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: GetFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: GetFolderPermissions(InspireClient, Int64)
  nameWithType: FolderExtensions.GetFolderPermissions(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetFolderPermissions
    path: Folders/FolderExtensions.cs
    startLine: 123
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return folder permission details.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindFolderPermissions() going forward. This method will be removed in a future release.")]

      public static PermissionUpdateModel GetFolderPermissions(this InspireClient client, long folderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    return:
      type: Vasont.Inspire.Models.Components.PermissionUpdateModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.PermissionUpdateModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindFolderPermissions() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetFolderPermissions(client As InspireClient, folderId As Long) As PermissionUpdateModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindFolderPermissions() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: FindFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: FindFolderPermissions(InspireClient, Int64)
  nameWithType: FolderExtensions.FindFolderPermissions(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindFolderPermissions
    path: Folders/FolderExtensions.cs
    startLine: 135
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to return folder permission details.\n"
  example: []
  syntax:
    content: public static PermissionUpdateModel FindFolderPermissions(this InspireClient client, long folderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    return:
      type: Vasont.Inspire.Models.Components.PermissionUpdateModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.PermissionUpdateModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindFolderPermissions(client As InspireClient, folderId As Long) As PermissionUpdateModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64)
  id: MoveFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: MoveFolder(InspireClient, Int64, Int64)
  nameWithType: FolderExtensions.MoveFolder(InspireClient, Int64, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder(Vasont.Inspire.SDK.InspireClient, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: MoveFolder
    path: Folders/FolderExtensions.cs
    startLine: 153
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to move a source folder to a target folder.\n"
  example: []
  syntax:
    content: public static FolderBrowseModel MoveFolder(this InspireClient client, long sourceFolderId, long targetFolderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: sourceFolderId
      type: System.Int64
      description: Contains the source folder identity.
    - id: targetFolderId
      type: System.Int64
      description: Contains the target folder identity to which to move this folder to.
    return:
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MoveFolder(client As InspireClient, sourceFolderId As Long, targetFolderId As Long) As FolderBrowseModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  id: CreateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: CreateFolder(InspireClient, Int64, FolderBrowseModel)
  nameWithType: FolderExtensions.CreateFolder(InspireClient, Int64, FolderBrowseModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.FolderBrowseModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: CreateFolder
    path: Folders/FolderExtensions.cs
    startLine: 171
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to create a new folder and return details about the newly created folder.\n"
  example: []
  syntax:
    content: public static FolderBrowseModel CreateFolder(this InspireClient client, long targetFolderId, FolderBrowseModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: targetFolderId
      type: System.Int64
      description: Contains the folder identity.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Returns a <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateFolder(client As InspireClient, targetFolderId As Long, inputModel As FolderBrowseModel) As FolderBrowseModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64,System.Boolean)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64,System.Boolean)
  id: ExportFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,System.Int64,System.Boolean)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: ExportFolder(InspireClient, Int64, Int64, Boolean)
  nameWithType: FolderExtensions.ExportFolder(InspireClient, Int64, Int64, Boolean)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder(Vasont.Inspire.SDK.InspireClient, System.Int64, System.Int64, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: ExportFolder
    path: Folders/FolderExtensions.cs
    startLine: 190
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to initiate an export request and return details about the successfully submitted export request.\n"
  example: []
  syntax:
    content: public static ExportRequestModel ExportFolder(this InspireClient client, long targetFolderId, long exportId = 0L, bool includeSubFolders = false)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: targetFolderId
      type: System.Int64
      description: Contains the folder identity.
    - id: exportId
      type: System.Int64
      description: Contains the export identity value.
    - id: includeSubFolders
      type: System.Boolean
      description: Contains a flag indicating whether to include subfolders or not.
    return:
      type: Vasont.Inspire.Models.Transfers.ExportRequestModel
      description: Returns a <xref href="Vasont.Inspire.Models.Transfers.ExportRequestModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExportFolder(client As InspireClient, targetFolderId As Long, exportId As Long = 0L, includeSubFolders As Boolean = False) As ExportRequestModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: DeleteFolder(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: DeleteFolder(InspireClient, Int64)
  nameWithType: FolderExtensions.DeleteFolder(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: DeleteFolder
    path: Folders/FolderExtensions.cs
    startLine: 207
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to delete an existing folder.\n"
  example: []
  syntax:
    content: public static bool DeleteFolder(this InspireClient client, long folderId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    return:
      type: System.Boolean
      description: Returns a boolean value indicating whether the action succeeded or not.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteFolder(client As InspireClient, folderId As Long) As Boolean
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.PermissionUpdateModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.PermissionUpdateModel)
  id: UpdateFolderPermissions(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.PermissionUpdateModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: UpdateFolderPermissions(InspireClient, Int64, PermissionUpdateModel)
  nameWithType: FolderExtensions.UpdateFolderPermissions(InspireClient, Int64, PermissionUpdateModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.PermissionUpdateModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: UpdateFolderPermissions
    path: Folders/FolderExtensions.cs
    startLine: 226
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to update existing folder permissions.\n"
  example: []
  syntax:
    content: public static PermissionUpdateModel UpdateFolderPermissions(this InspireClient client, long folderId, PermissionUpdateModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.PermissionUpdateModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.PermissionUpdateModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.PermissionUpdateModel
      description: Returns the updated <xref href="Vasont.Inspire.Models.Components.PermissionUpdateModel" data-throw-if-not-resolved="false"></xref> object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateFolderPermissions(client As InspireClient, folderId As Long, inputModel As PermissionUpdateModel) As PermissionUpdateModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  id: UpdateFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: UpdateFolder(InspireClient, Int64, FolderBrowseModel)
  nameWithType: FolderExtensions.UpdateFolder(InspireClient, Int64, FolderBrowseModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.FolderBrowseModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: UpdateFolder
    path: Folders/FolderExtensions.cs
    startLine: 244
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to update an existing folder.\n"
  example: []
  syntax:
    content: public static FolderBrowseModel UpdateFolder(this InspireClient client, long folderId, FolderBrowseModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Returns the updated <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateFolder(client As InspireClient, folderId As Long, inputModel As FolderBrowseModel) As FolderBrowseModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  commentId: M:Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  id: RenameFolder(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Components.FolderBrowseModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Folders.FolderExtensions
  langs:
  - csharp
  - vb
  name: RenameFolder(InspireClient, Int64, FolderBrowseModel)
  nameWithType: FolderExtensions.RenameFolder(InspireClient, Int64, FolderBrowseModel)
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Components.FolderBrowseModel)
  type: Method
  source:
    remote:
      path: src/Folders/FolderExtensions.cs
      branch: develop
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: RenameFolder
    path: Folders/FolderExtensions.cs
    startLine: 262
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Folders
  summary: "\nThis method is used to rename an existing folder.\n"
  example: []
  syntax:
    content: public static FolderBrowseModel RenameFolder(this InspireClient client, long folderId, FolderBrowseModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: folderId
      type: System.Int64
      description: Contains the folder identity.
    - id: inputModel
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Contains the <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Components.FolderBrowseModel
      description: Returns the renamed <xref href="Vasont.Inspire.Models.Components.FolderBrowseModel" data-throw-if-not-resolved="false"></xref> object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RenameFolder(client As InspireClient, folderId As Long, inputModel As FolderBrowseModel) As FolderBrowseModel
  overload: Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Vasont.Inspire.SDK.InspireClient
  commentId: T:Vasont.Inspire.SDK.InspireClient
  parent: Vasont.Inspire.SDK
  name: InspireClient
  nameWithType: InspireClient
  fullName: Vasont.Inspire.SDK.InspireClient
- uid: Vasont.Inspire.SDK.Folders
  commentId: N:Vasont.Inspire.SDK.Folders
  name: Vasont.Inspire.SDK.Folders
  nameWithType: Vasont.Inspire.SDK.Folders
  fullName: Vasont.Inspire.SDK.Folders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.SDK
  commentId: N:Vasont.Inspire.SDK
  name: Vasont.Inspire.SDK
  nameWithType: Vasont.Inspire.SDK
  fullName: Vasont.Inspire.SDK
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Security.PermissionFlags
  commentId: T:Vasont.Inspire.Models.Security.PermissionFlags
  parent: Vasont.Inspire.Models.Security
  isExternal: true
  name: PermissionFlags
  nameWithType: PermissionFlags
  fullName: Vasont.Inspire.Models.Security.PermissionFlags
- uid: Vasont.Inspire.Models.Components.FolderBrowseModel
  commentId: T:Vasont.Inspire.Models.Components.FolderBrowseModel
  parent: Vasont.Inspire.Models.Components
  isExternal: true
  name: FolderBrowseModel
  nameWithType: FolderBrowseModel
  fullName: Vasont.Inspire.Models.Components.FolderBrowseModel
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId
  name: GetFoldersByFolderId
  nameWithType: FolderExtensions.GetFoldersByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFoldersByFolderId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Components.FolderBrowseModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FolderBrowseModel>
  nameWithType: List<FolderBrowseModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Components.FolderBrowseModel>
  nameWithType.vb: List(Of FolderBrowseModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Components.FolderBrowseModel)
  name.vb: List(Of FolderBrowseModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Components.FolderBrowseModel
    name: FolderBrowseModel
    nameWithType: FolderBrowseModel
    fullName: Vasont.Inspire.Models.Components.FolderBrowseModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Components.FolderBrowseModel
    name: FolderBrowseModel
    nameWithType: FolderBrowseModel
    fullName: Vasont.Inspire.Models.Components.FolderBrowseModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  isExternal: true
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.Models.Components
  commentId: N:Vasont.Inspire.Models.Components
  isExternal: true
  name: Vasont.Inspire.Models.Components
  nameWithType: Vasont.Inspire.Models.Components
  fullName: Vasont.Inspire.Models.Components
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId
  name: FindFoldersByFolderId
  nameWithType: FolderExtensions.FindFoldersByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFoldersByFolderId
- uid: Vasont.Inspire.Models.Components.FolderComponentsQueryModel
  commentId: T:Vasont.Inspire.Models.Components.FolderComponentsQueryModel
  parent: Vasont.Inspire.Models.Components
  isExternal: true
  name: FolderComponentsQueryModel
  nameWithType: FolderComponentsQueryModel
  fullName: Vasont.Inspire.Models.Components.FolderComponentsQueryModel
- uid: Vasont.Inspire.Models.Components.FolderComponentsResultModel
  commentId: T:Vasont.Inspire.Models.Components.FolderComponentsResultModel
  parent: Vasont.Inspire.Models.Components
  isExternal: true
  name: FolderComponentsResultModel
  nameWithType: FolderComponentsResultModel
  fullName: Vasont.Inspire.Models.Components.FolderComponentsResultModel
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId
  name: GetComponentsByFolderId
  nameWithType: FolderExtensions.GetComponentsByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetComponentsByFolderId
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId
  name: FindComponentsByFolderId
  nameWithType: FolderExtensions.FindComponentsByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindComponentsByFolderId
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId
  name: GetAncestorSiblingFoldersByFolderId
  nameWithType: FolderExtensions.GetAncestorSiblingFoldersByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetAncestorSiblingFoldersByFolderId
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId
  name: FindAncestorSiblingFoldersByFolderId
  nameWithType: FolderExtensions.FindAncestorSiblingFoldersByFolderId
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindAncestorSiblingFoldersByFolderId
- uid: Vasont.Inspire.Models.Components.PermissionUpdateModel
  commentId: T:Vasont.Inspire.Models.Components.PermissionUpdateModel
  parent: Vasont.Inspire.Models.Components
  isExternal: true
  name: PermissionUpdateModel
  nameWithType: PermissionUpdateModel
  fullName: Vasont.Inspire.Models.Components.PermissionUpdateModel
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions
  name: GetFolderPermissions
  nameWithType: FolderExtensions.GetFolderPermissions
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.GetFolderPermissions
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions
  name: FindFolderPermissions
  nameWithType: FolderExtensions.FindFolderPermissions
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.FindFolderPermissions
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder
  name: MoveFolder
  nameWithType: FolderExtensions.MoveFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.MoveFolder
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder
  name: CreateFolder
  nameWithType: FolderExtensions.CreateFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.CreateFolder
- uid: Vasont.Inspire.Models.Transfers.ExportRequestModel
  commentId: T:Vasont.Inspire.Models.Transfers.ExportRequestModel
  parent: Vasont.Inspire.Models.Transfers
  isExternal: true
  name: ExportRequestModel
  nameWithType: ExportRequestModel
  fullName: Vasont.Inspire.Models.Transfers.ExportRequestModel
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder
  name: ExportFolder
  nameWithType: FolderExtensions.ExportFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.ExportFolder
- uid: Vasont.Inspire.Models.Transfers
  commentId: N:Vasont.Inspire.Models.Transfers
  isExternal: true
  name: Vasont.Inspire.Models.Transfers
  nameWithType: Vasont.Inspire.Models.Transfers
  fullName: Vasont.Inspire.Models.Transfers
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder
  name: DeleteFolder
  nameWithType: FolderExtensions.DeleteFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.DeleteFolder
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions
  name: UpdateFolderPermissions
  nameWithType: FolderExtensions.UpdateFolderPermissions
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolderPermissions
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder
  name: UpdateFolder
  nameWithType: FolderExtensions.UpdateFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.UpdateFolder
- uid: Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder*
  commentId: Overload:Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder
  name: RenameFolder
  nameWithType: FolderExtensions.RenameFolder
  fullName: Vasont.Inspire.SDK.Folders.FolderExtensions.RenameFolder
