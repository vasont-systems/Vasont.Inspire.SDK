### YamlMime:ManagedReference
items:
- uid: Vasont.Inspire.SDK.Security.UserExtensions
  commentId: T:Vasont.Inspire.SDK.Security.UserExtensions
  id: UserExtensions
  parent: Vasont.Inspire.SDK.Security
  children:
  - Vasont.Inspire.SDK.Security.UserExtensions.CreateUser(Vasont.Inspire.SDK.InspireClient,Vasont.Inspire.Models.Security.UserModel)
  - Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Security.UserExtensions.FindUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Security.UserExtensions.FindUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  - Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers(Vasont.Inspire.SDK.InspireClient)
  - Vasont.Inspire.SDK.Security.UserExtensions.GetUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  - Vasont.Inspire.SDK.Security.UserExtensions.GetUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  - Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers(Vasont.Inspire.SDK.InspireClient)
  - Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Security.UserModel)
  langs:
  - csharp
  - vb
  name: UserExtensions
  nameWithType: UserExtensions
  fullName: Vasont.Inspire.SDK.Security.UserExtensions
  type: Class
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: UserExtensions
    path: Security/UserExtensions.cs
    startLine: 17
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis class extends the <xref href=\"Vasont.Inspire.SDK.InspireClient\" data-throw-if-not-resolved=\"false\"></xref> class to include methods for calling \nuser API endpoints.\n"
  example: []
  syntax:
    content: public static class UserExtensions
    content.vb: Public Module UserExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers(Vasont.Inspire.SDK.InspireClient)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers(Vasont.Inspire.SDK.InspireClient)
  id: GetAllUsers(Vasont.Inspire.SDK.InspireClient)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: GetAllUsers(InspireClient)
  nameWithType: UserExtensions.GetAllUsers(InspireClient)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers(Vasont.Inspire.SDK.InspireClient)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetAllUsers
    path: Security/UserExtensions.cs
    startLine: 26
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to retrieve a list of users from the system.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use RetrieveUsers() going forward. This method will be removed in a future release.")]

      public static List<SelectUserRoleModel> GetAllUsers(this InspireClient client)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Utilities.SelectUserRoleModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Utilities.SelectUserRoleModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use RetrieveUsers() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetAllUsers(client As InspireClient) As List(Of SelectUserRoleModel)
  overload: Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use RetrieveUsers() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers(Vasont.Inspire.SDK.InspireClient)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers(Vasont.Inspire.SDK.InspireClient)
  id: RetrieveUsers(Vasont.Inspire.SDK.InspireClient)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: RetrieveUsers(InspireClient)
  nameWithType: UserExtensions.RetrieveUsers(InspireClient)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers(Vasont.Inspire.SDK.InspireClient)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: RetrieveUsers
    path: Security/UserExtensions.cs
    startLine: 37
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to retrieve a list of users from the system.\n"
  example: []
  syntax:
    content: public static List<SelectUserRoleModel> RetrieveUsers(this InspireClient client)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Utilities.SelectUserRoleModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Utilities.SelectUserRoleModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RetrieveUsers(client As InspireClient) As List(Of SelectUserRoleModel)
  overload: Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.GetUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: GetUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: GetUser(InspireClient, Int64)
  nameWithType: UserExtensions.GetUser(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetUser(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetUser
    path: Security/UserExtensions.cs
    startLine: 49
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to retrieve information about a specific user.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindUser() going forward. This method will be removed in a future release.")]

      public static UserModel GetUser(this InspireClient client, long userId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userId
      type: System.Int64
      description: Contains the user identity.
    return:
      type: Vasont.Inspire.Models.Security.UserModel
      description: Returns <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindUser() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetUser(client As InspireClient, userId As Long) As UserModel
  overload: Vasont.Inspire.SDK.Security.UserExtensions.GetUser*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindUser() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.FindUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.FindUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: FindUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: FindUser(InspireClient, Int64)
  nameWithType: UserExtensions.FindUser(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.FindUser(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindUser
    path: Security/UserExtensions.cs
    startLine: 61
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to retrieve information about a specific user.\n"
  example: []
  syntax:
    content: public static UserModel FindUser(this InspireClient client, long userId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userId
      type: System.Int64
      description: Contains the user identity.
    return:
      type: Vasont.Inspire.Models.Security.UserModel
      description: Returns <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> object if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindUser(client As InspireClient, userId As Long) As UserModel
  overload: Vasont.Inspire.SDK.Security.UserExtensions.FindUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.GetUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  id: GetUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: GetUsers(InspireClient, String, String, String, String, String)
  nameWithType: UserExtensions.GetUsers(InspireClient, String, String, String, String, String)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetUsers(Vasont.Inspire.SDK.InspireClient, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: GetUsers
    path: Security/UserExtensions.cs
    startLine: 77
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to find users based on the search criteria.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is obsolete. Please use FindUsers() going forward. This method will be removed in a future release.")]

      public static List<UserModel> GetUsers(this InspireClient client, string userName = "", string email = "", string phone = "", string orderBy = "UserName", string direction = "ascending")
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userName
      type: System.String
      description: Contains the name of the user.
    - id: email
      type: System.String
      description: Contains the email of the user.
    - id: phone
      type: System.String
      description: Contains the phone number of the user.
    - id: orderBy
      type: System.String
      description: Contains the order by field.
    - id: direction
      type: System.String
      description: Contains the direction of sort, &quot;ascending&quot; by default.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <Obsolete("This method is obsolete. Please use FindUsers() going forward. This method will be removed in a future release.")>

      <ExtensionAttribute>

      Public Shared Function GetUsers(client As InspireClient, userName As String = "", email As String = "", phone As String = "", orderBy As String = "UserName", direction As String = "ascending") As List(Of UserModel)
  overload: Vasont.Inspire.SDK.Security.UserExtensions.GetUsers*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method is obsolete. Please use FindUsers() going forward. This method will be removed in a future release.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.FindUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.FindUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  id: FindUsers(Vasont.Inspire.SDK.InspireClient,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: FindUsers(InspireClient, String, String, String, String, String)
  nameWithType: UserExtensions.FindUsers(InspireClient, String, String, String, String, String)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.FindUsers(Vasont.Inspire.SDK.InspireClient, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: FindUsers
    path: Security/UserExtensions.cs
    startLine: 93
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to find users based on the search criteria.\n"
  example: []
  syntax:
    content: public static List<UserModel> FindUsers(this InspireClient client, string userName = "", string email = "", string phone = "", string orderBy = "UserName", string direction = "ascending")
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userName
      type: System.String
      description: Contains the name of the user.
    - id: email
      type: System.String
      description: Contains the email of the user.
    - id: phone
      type: System.String
      description: Contains the phone number of the user.
    - id: orderBy
      type: System.String
      description: Contains the order by field.
    - id: direction
      type: System.String
      description: Contains the direction of sort, &quot;ascending&quot; by default.
    return:
      type: System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserModel}
      description: Returns a list of <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> objects if found.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindUsers(client As InspireClient, userName As String = "", email As String = "", phone As String = "", orderBy As String = "UserName", direction As String = "ascending") As List(Of UserModel)
  overload: Vasont.Inspire.SDK.Security.UserExtensions.FindUsers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.CreateUser(Vasont.Inspire.SDK.InspireClient,Vasont.Inspire.Models.Security.UserModel)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.CreateUser(Vasont.Inspire.SDK.InspireClient,Vasont.Inspire.Models.Security.UserModel)
  id: CreateUser(Vasont.Inspire.SDK.InspireClient,Vasont.Inspire.Models.Security.UserModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: CreateUser(InspireClient, UserModel)
  nameWithType: UserExtensions.CreateUser(InspireClient, UserModel)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.CreateUser(Vasont.Inspire.SDK.InspireClient, Vasont.Inspire.Models.Security.UserModel)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: CreateUser
    path: Security/UserExtensions.cs
    startLine: 105
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to create a new user.\n"
  example: []
  syntax:
    content: public static UserModel CreateUser(this InspireClient client, UserModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: inputModel
      type: Vasont.Inspire.Models.Security.UserModel
      description: Contains the <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Security.UserModel
      description: Returns the newly created <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateUser(client As InspireClient, inputModel As UserModel) As UserModel
  overload: Vasont.Inspire.SDK.Security.UserExtensions.CreateUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Security.UserModel)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Security.UserModel)
  id: UpdateUser(Vasont.Inspire.SDK.InspireClient,System.Int64,Vasont.Inspire.Models.Security.UserModel)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: UpdateUser(InspireClient, Int64, UserModel)
  nameWithType: UserExtensions.UpdateUser(InspireClient, Int64, UserModel)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser(Vasont.Inspire.SDK.InspireClient, System.Int64, Vasont.Inspire.Models.Security.UserModel)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: UpdateUser
    path: Security/UserExtensions.cs
    startLine: 123
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to update an existing user.\n"
  example: []
  syntax:
    content: public static UserModel UpdateUser(this InspireClient client, long userId, UserModel inputModel)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userId
      type: System.Int64
      description: Contains the user identity.
    - id: inputModel
      type: Vasont.Inspire.Models.Security.UserModel
      description: Contains the <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> input.
    return:
      type: Vasont.Inspire.Models.Security.UserModel
      description: Returns the updated <xref href="Vasont.Inspire.Models.Security.UserModel" data-throw-if-not-resolved="false"></xref> object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateUser(client As InspireClient, userId As Long, inputModel As UserModel) As UserModel
  overload: Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  commentId: M:Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  id: DeleteUser(Vasont.Inspire.SDK.InspireClient,System.Int64)
  isExtensionMethod: true
  parent: Vasont.Inspire.SDK.Security.UserExtensions
  langs:
  - csharp
  - vb
  name: DeleteUser(InspireClient, Int64)
  nameWithType: UserExtensions.DeleteUser(InspireClient, Int64)
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser(Vasont.Inspire.SDK.InspireClient, System.Int64)
  type: Method
  source:
    remote:
      path: src/Security/UserExtensions.cs
      branch: feature/TranslationIntegrationManagement
      repo: https://github.com/vasont-systems/Vasont.Inspire.SDK.git
    id: DeleteUser
    path: Security/UserExtensions.cs
    startLine: 140
  assemblies:
  - Vasont.Inspire.SDK
  namespace: Vasont.Inspire.SDK.Security
  summary: "\nThis method is used to delete an existing user.\n"
  example: []
  syntax:
    content: public static bool DeleteUser(this InspireClient client, long userId)
    parameters:
    - id: client
      type: Vasont.Inspire.SDK.InspireClient
      description: Contains the <xref href="Vasont.Inspire.SDK.InspireClient" data-throw-if-not-resolved="false"></xref> that is used for communication.
    - id: userId
      type: System.Int64
      description: Contains the user identity to delete.
    return:
      type: System.Boolean
      description: Returns a value indicating whether the delete request was successful.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteUser(client As InspireClient, userId As Long) As Boolean
  overload: Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Vasont.Inspire.SDK.InspireClient
  commentId: T:Vasont.Inspire.SDK.InspireClient
  parent: Vasont.Inspire.SDK
  name: InspireClient
  nameWithType: InspireClient
  fullName: Vasont.Inspire.SDK.InspireClient
- uid: Vasont.Inspire.SDK.Security
  commentId: N:Vasont.Inspire.SDK.Security
  name: Vasont.Inspire.SDK.Security
  nameWithType: Vasont.Inspire.SDK.Security
  fullName: Vasont.Inspire.SDK.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.SDK
  commentId: N:Vasont.Inspire.SDK
  name: Vasont.Inspire.SDK
  nameWithType: Vasont.Inspire.SDK
  fullName: Vasont.Inspire.SDK
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vasont.Inspire.Models.Utilities.SelectUserRoleModel
  commentId: T:Vasont.Inspire.Models.Utilities.SelectUserRoleModel
  isExternal: true
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers
  name: GetAllUsers
  nameWithType: UserExtensions.GetAllUsers
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetAllUsers
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Utilities.SelectUserRoleModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Utilities.SelectUserRoleModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SelectUserRoleModel>
  nameWithType: List<SelectUserRoleModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Utilities.SelectUserRoleModel>
  nameWithType.vb: List(Of SelectUserRoleModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Utilities.SelectUserRoleModel)
  name.vb: List(Of SelectUserRoleModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Utilities.SelectUserRoleModel
    name: SelectUserRoleModel
    nameWithType: SelectUserRoleModel
    fullName: Vasont.Inspire.Models.Utilities.SelectUserRoleModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Utilities.SelectUserRoleModel
    name: SelectUserRoleModel
    nameWithType: SelectUserRoleModel
    fullName: Vasont.Inspire.Models.Utilities.SelectUserRoleModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers
  name: RetrieveUsers
  nameWithType: UserExtensions.RetrieveUsers
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.RetrieveUsers
- uid: Vasont.Inspire.Models.Security.UserModel
  commentId: T:Vasont.Inspire.Models.Security.UserModel
  parent: Vasont.Inspire.Models.Security
  isExternal: true
  name: UserModel
  nameWithType: UserModel
  fullName: Vasont.Inspire.Models.Security.UserModel
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetUser*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.GetUser
  name: GetUser
  nameWithType: UserExtensions.GetUser
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetUser
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Vasont.Inspire.Models.Security
  commentId: N:Vasont.Inspire.Models.Security
  isExternal: true
  name: Vasont.Inspire.Models.Security
  nameWithType: Vasont.Inspire.Models.Security
  fullName: Vasont.Inspire.Models.Security
- uid: Vasont.Inspire.SDK.Security.UserExtensions.FindUser*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.FindUser
  name: FindUser
  nameWithType: UserExtensions.FindUser
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.FindUser
- uid: Vasont.Inspire.SDK.Security.UserExtensions.GetUsers*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.GetUsers
  name: GetUsers
  nameWithType: UserExtensions.GetUsers
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.GetUsers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserModel}
  commentId: T:System.Collections.Generic.List{Vasont.Inspire.Models.Security.UserModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserModel>
  nameWithType: List<UserModel>
  fullName: System.Collections.Generic.List<Vasont.Inspire.Models.Security.UserModel>
  nameWithType.vb: List(Of UserModel)
  fullName.vb: System.Collections.Generic.List(Of Vasont.Inspire.Models.Security.UserModel)
  name.vb: List(Of UserModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vasont.Inspire.Models.Security.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: Vasont.Inspire.Models.Security.UserModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vasont.Inspire.Models.Security.UserModel
    name: UserModel
    nameWithType: UserModel
    fullName: Vasont.Inspire.Models.Security.UserModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vasont.Inspire.SDK.Security.UserExtensions.FindUsers*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.FindUsers
  name: FindUsers
  nameWithType: UserExtensions.FindUsers
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.FindUsers
- uid: Vasont.Inspire.SDK.Security.UserExtensions.CreateUser*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.CreateUser
  name: CreateUser
  nameWithType: UserExtensions.CreateUser
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.CreateUser
- uid: Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser
  name: UpdateUser
  nameWithType: UserExtensions.UpdateUser
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.UpdateUser
- uid: Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser*
  commentId: Overload:Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser
  name: DeleteUser
  nameWithType: UserExtensions.DeleteUser
  fullName: Vasont.Inspire.SDK.Security.UserExtensions.DeleteUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
